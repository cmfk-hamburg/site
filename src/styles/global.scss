html,
body {
  background: $c-gray;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: "gtCinetype", sans-serif;
}

main {
  @include container;
  z-index: 1;
  position: relative;
  display: block;
  margin: 0 auto;
  background: $c-white;
  overflow: hidden;
}

.page-wrapper {
  background: $c-white;
  border-bottom-left-radius: pxToRem(24px);
  border-bottom-right-radius: pxToRem(24px);
  transition: transform $d-anim ease-in-out;
  overflow: hidden;

  &.shrink {
    opacity: 0.8;
    transform: translate3d(0px, 0vh, 0px) scale(0.96);
    transform-origin: center calc(100% - 500px);
  }
}

a {
  text-decoration: none;
}

.btn {
  @include f-btn;
  display: block;
  box-sizing: border-box;
  transition: all 0.3s ease-in-out;

  @include breakpoint(xs-sm) {
    padding: pxToRem(8px) pxToRem(16px);
  }
  @include breakpoint(md) {
    padding: pxToRem(8px) pxToRem(16px);
  }
  @include breakpoint(lg) {
    padding: pxToRem(8px) pxToRem(16px);
  }
}

.btn--small {
  @include f-btn-small;
  @include breakpoint(xs-sm) {
    padding: pxToRem(6px) pxToRem(12px);
  }
  @include breakpoint(md) {
    padding: pxToRem(6px) pxToRem(12px);
  }
  @include breakpoint(lg) {
    padding: pxToRem(6px) pxToRem(12px);
  }
}

.btn--primary {
  background-color: $c-green;
  border: 1px solid $c-green;
  color: $c-white;
  box-shadow: inset 0 0 0 0 $c-white;

  &:hover {
    color: $c-green;
    box-shadow: inset 400px 0 0 0 $c-white;
  }
}

.btn--secondary {
  background-color: $c-white;
  border: 1px solid $c-green;
  color: $c-green;
  box-shadow: inset 0 0 0 0 $c-green;

  &:hover {
    color: $c-white;
    box-shadow: inset 400px 0 0 0 $c-green;
  }
}

.btn--outline {
  background-color: $c-green;
  border: 1px solid $c-green;
  color: $c-white !important;
  text-decoration: none !important;

  &:hover {
    transition: none;
  }
}

.link {
  @include f-copy;
  color: $c-white;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}

.link--with-chevron {
  &::after {
    content: ">";
    margin-left: pxToRem(6px);
  }
}

.text-module {
  margin-bottom: pxToRem(80px);
  background-color: $c-white;
  color: $c-black;
}

.text-module__head {
  display: grid;
  margin-top: pxToRem(60px);

  @include breakpoint(md) {
    grid-template-rows: 1fr;
  }
  @include breakpoint(lg) {
    grid-template-columns: 9fr 3fr;
  }
}

.text-module__headline {
  @include f-subtitle-1;
  margin: 0;
  color: $c-green;

  p {
    @include f-btn;
    margin-top: pxToRem(40px);
    margin-bottom: 0;
    text-align: right;
  }
}

.text-module__cta {
  height: fit-content;
  width: fit-content;

  @include breakpoint(sm-md) {
    margin-top: pxToRem(40px);
  }

  @include breakpoint(lg) {
    justify-self: end;
  }

  img {
    max-width: pxToRem(180px);
  }
}

.text-module__head--with-tab {
  @include breakpoint(sm-md) {
    display: flex;
    flex-direction: column-reverse;
  }

  &.text-module__head--volunteer {
    @include breakpoint(lg) {
      margin-bottom: pxToRem(-60px);
    }
  }
}

.text-module__tabs {
  @include f-btn-bold;
  list-style: none;

  @include breakpoint(sm-md) {
    display: grid;
    grid-template-columns: 1fr 1fr;
    justify-items: center;
    padding: 0;
  }

  @include breakpoint(lg) {
    margin: 0;
  }

  .text-module__tab-link {
    border-bottom: 2px solid transparent;
    padding: pxToRem(4px) pxToRem(12px);
    color: $c-green;
    transition: all 0.3s ease-in-out;
    border: 1px solid $c-white;

    &:hover {
      border: 1px solid $c-green;
    }
  }

  .text-module__tab {
    margin-bottom: pxToRem(24px);
    text-align: right;

    &.is-active {
      .text-module__tab-link {
        @extend .btn--primary;
      }
    }
  }
}

.text-module__content {
  background-color: $c-white;
  color: $c-black;

  @include breakpoint(xs-sm) {
    margin-top: pxToRem(40px);
  }
  @include breakpoint(md) {
    margin-top: pxToRem(40px);
  }
  @include breakpoint(lg) {
    margin-top: pxToRem(60px);
    width: column(8, 10);
  }

  h2 {
    @include f-headline-h2;
    margin-top: pxToRem(40px);
    color: $c-green;
  }

  h3 {
    @include f-headline-h3;
    margin-top: pxToRem(40px);
    margin-bottom: pxToRem(20px);
    color: $c-green;
  }

  a {
    color: $c-green;
    font-weight: $fw-regular-bold;
    text-decoration: underline;

    &:hover {
      text-decoration: none;
    }
  }

  p,
  ol,
  ul {
    @include f-copy;
    margin-block: pxToRem(40px);
  }

  img {
    margin-block: pxToRem(40px);
    height: auto;
    max-width: 100%;
  }

  .downloads {
    display: flex;

    a {
      position: relative;
      margin-right: pxToRem(40px);

      img {
        margin: 0;
      }

      .overlay {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        height: 100%;
        width: 100%;
        opacity: 0;
        transition: 0.5s ease;
        background-color: $c-green;
      }

      .text {
        color: $c-white;
        font-size: pxToRem(22px);
        position: absolute;
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
        text-align: center;
      }

      &:hover .overlay {
        opacity: 0.85;
      }
    }
  }

  h3 + ol,
  h3 + ul,
  h3 + img,
  h3 + p {
    margin-top: 20px;
  }
}

.program-body {
  overflow: unset !important;

  main {
    overflow: unset !important;
  }

  .page-wrapper {
    overflow: unset !important;
  }
}

.programs {
  margin-top: pxToRem(60px);

  @include breakpoint(xs-sm) {
    margin-top: pxToRem(36px);
  }
}

.program__links {
  display: grid;
  place-items: end;
  margin-top: pxToRem(60px);

  @include breakpoint(xs-sm) {
    margin-top: pxToRem(36px);
  }
}

.film__content {
  p {
    margin-top: 0;
    margin-bottom: pxToRem(20px);
    line-height: 1.3;
  }

  h3 {
    color: $c-green;
    font-weight: $fw-regular;
    margin-top: pxToRem(40px);
    margin-bottom: pxToRem(16px);
  }

  a:not([class]) {
    color: $c-green;
    text-decoration: underline;
  }
}
